{"name":"Pymigration","tagline":"A generic tool for migrate in python","body":"[![Build Status](https://api.travis-ci.org/globocom/pymigration.png)](https://api.travis-ci.org/globocom/pymigration)\r\n\r\nPymigration\r\n===========\r\n\r\nA generic tool for migrate in python.\r\n\r\nPymigration brings migrations to Python applications. Its main objectives are to provide a simple, stable and database-independent migration layer to prevent all the hassle schema changes over time bring to your applications.\r\n\r\nWe try to make Pymigration both as easy-to-use and intuitive as possible, by making it automate most of your schema-changing tasks, while at the same time providing a powerful set of tools for large or complex projects.\r\n\r\n\r\nInstall\r\n=======\r\n\r\nIf you have pip available on your system, just type::\r\n\r\n    pip install pymigration\r\n\r\nIf you’ve already got an old version of pymigration, and want to upgrade, use:\r\n\r\n    pip install --upgrade pymigration\r\n\r\n\r\n\r\nUnderstanding how to use\r\n========================\r\n\r\nThe first thing you’ll need is a migration file. There are some example \r\nmigration files in the “pymigrations” directory. The migration files \r\nhave the following format::\r\n\r\n    # -*- coding: utf-8 -*-\r\n    #hello_world.py\r\n\r\n    \"\"\"\r\n        migrate all the world of test\r\n        greetings world\r\n    \"\"\"\r\n\r\n    version = \"0.0.1\"\r\n\r\n    def up():\r\n        \"\"\" HeLo World and migrate the world \"\"\"\r\n        print \"HeLo World and migrate the world\"\r\n\r\n    def down():\r\n        \"\"\"roolback the world\"\"\"\r\n        print \"Bye World and roolback the world\"\r\n\r\n\r\nPymigration uses the _version_ information to track the migrations schema and to \r\ndecide the order of execution of the scripts. Pymigration will go through all .py \r\nfiles in your directory and execute all of them in their creation (date) order.\r\n\r\nSecond, you have to configure access to your current version so Pymigration can execute DDL. \r\nJust create a file named “conf.py”, with the following content \r\n(there is also an example in the “pymigration” directory):\r\n\r\n    # -*- coding: utf-8 -*-\r\n    import settings\r\n\r\n    folder = \"{PATH_PYMIGRATION}/version.txt\".format(**vars(settings))\r\n\r\nIt is possible to override the way Pymigration retrieve the current version. To do so,\r\nyou just need do implement the methods get_current_version and set_current_version:\r\n\r\n    # -*- coding: utf-8 -*-\r\n\r\n    folder = \"/version_folder\"\r\n\r\n    def get_current_version():\r\n        with open(\"{folder}/version.txt\".format(folder=folder)) as f:\r\n            version = f.read()\r\n        return version\r\n\r\n    def set_current_version(version):\r\n        with open(\"{folder}/version.txt\".format(folder=folder)) as f:\r\n            f.write(version)\r\n\r\n\r\n\r\nMigrating to a specific version\r\n===============================\r\n\r\nIf you want, you can migrate your database schema to a specific version by \r\ninforming the --to (or -t) parameter. The attribute _version_ of the migration\r\nfile will be used as unique identifier:\r\n\r\n    $ pymigration --to=00.00.01\r\n\r\nIf you don’t specify any version, using --up or --down, Pymigration will migrate \r\nthe schema to the latest version available in the migrations directories \r\nspecified in the config file.\r\n\r\n\r\n\r\nYou can do anything!\r\n====================\r\n\r\nYou can use this project to run migrations on MySQL, Oracle, MS-SQL, redis, filesystem, \r\nsolr, elasticsearch or any database server.\r\n\r\n\r\nGetting involved !\r\n==================\r\n\r\nPymigration's development may be viewed and followed on github::\r\n\r\n    http://github.com/globocom/pymigration\r\n\r\nRetrieve the source code using 'git'::\r\n\r\n    $ git clone git@github.com:globocom/pymigration.git\r\n\r\n\r\nInstall package in 'development mode' and run tests with _run_::\r\n\r\n    $ git clone git@github.com:globocom/pymigration.git\r\n    $ cd pymigration\r\n    $ ./run unit\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}